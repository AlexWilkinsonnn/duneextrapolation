#include "services_dune.fcl"
#include "reco3view_workflow.fcl"
#include "tools_dune.fcl"

process_name: RecoLoadedDepos

services:
{
  TFileService: { fileName: "reco_hist.root" }
  MemoryTracker:     {}
  TimeTracker:       {}
  RandomNumberGenerator: {}
  message:              @local::dune_message_services_prod
  FileCatalogMetadata:  @local::art_file_catalog_mc
                        @table::dunefd_reco_services_refactored
  @table::dunefd_1x2x6_reco_services_refactored
}

source:
{
  module_type: RootInput
  maxEvents:  -1
  saveMemoryObjectThreshold: 0
  inputCommands: ["keep *_*_*_*", "drop *_*_*_Reco" ]
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   @table::reco3view_producers
 }

 # define the output stream, there could be more than one if using filters
 stream1:  [ out1 ]

 # trigger_paths is a keyword and contains the paths that modify the art::event,
 # ie filters and producers
 reco: [ @sequence::reco3view_workflow ]
 trigger_paths: [ reco ]

 # end_paths is a keyword and contains the paths that do not modify the art::Event,
 # ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]
}

# block to define where the output goes. if you defined a filter in the physics
# block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
# entry in the output stream you want those to go to,
# where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_reco.root"
   dataTier:    "full-reconstructed"
   compressionLevel: 1
   saveMemoryObjectThreshold: 0
   outputCommands: ["keep *", "drop *_wclsmcnfsp_wiener_*"]
 }
}

physics.producers.wclsmcnfsp.wcls_main.params.raw_input_label: "tpcrawdecoder:daq:detsim"
physics.producers.gaushit.CalDataModuleLabel:                  "wclsmcnfsp:gauss:RecoLoadedDepos"

physics.producers.spsolve.HitLabel:     "gaushit::RecoLoadedDepos"
physics.producers.hitfd.HitModuleLabel: "gaushit::RecoLoadedDepos"
physics.producers.hitfd.SpModuleLabel:  "spsolve::RecoLoadedDepos"

physics.producers.linecluster.HitFinderModuleLabel: "hitfd::RecoLoadedDepos"

physics.producers.pandora.HitFinderModuleLabel:      "linecluster::RecoLoadedDepos"
physics.producers.pandora.GeantModuleLabel:          "IonAndScint::RecoLoadedDepos"
physics.producers.pandoraTrack.PFParticleLabel:      "pandora::RecoLoadedDepos"
physics.producers.pandoraShower.PFParticleLabel:     "pandora::RecoLoadedDepos"
physics.producers.pandoracalo.TrackModuleLabel:      "pandoraTrack::RecoLoadedDepos"
physics.producers.pandoracalo.SpacePointModuleLabel: "pandora::RecoLoadedDepos"
physics.producers.pandoracalo.SpacePointModuleLabel: "pandora::RecoLoadedDepos"
physics.producers.pandorapid.CalorimetryModuleLabel: "pandoracalo::RecoLoadedDepos"
physics.producers.pandorapid.TrackModuleLabel:       "pandoraTrack::RecoLoadedDepos"

physics.producers.cvnmap.HitsModuleLabel: "hitfd::RecoLoadedDepos"
# producer does `art::InputTag itag1(fPixelMapInput, fPixelMapInput)` so need a
# unique instance and module label >:(
physics.producers.cvnmap.ClusterPMLabel:  "cvnmap"
physics.producers.cvnmap.MinClusterHits:  0

physics.producers.cvneva.PixelMapInput: "cvnmap"

physics.producers.energyrecnumu.HitLabel:             "linecluster::RecoLoadedDepos"
physics.producers.energyrecnumu.HitToSpacePointLabel: "pandora::RecoLoadedDepos"
physics.producers.energyrecnumu.ShowerLabel:          "pandoraShower::RecoLoadedDepos"
physics.producers.energyrecnumu.ShowerToHitLabel:     "pandoraShower::RecoLoadedDepos"
physics.producers.energyrecnumu.TrackLabel:           "pandoraTrack::RecoLoadedDepos"
physics.producers.energyrecnumu.TrackToHitLabel:      "pandoraTrack::RecoLoadedDepos"
physics.producers.energyrecnumu.WireLabel:            "wclsmcnfsp:gauss:RecoLoadedDepos"
physics.producers.energyrecnc.HitLabel:               "linecluster::RecoLoadedDepos"
physics.producers.energyrecnc.HitToSpacePointLabel:   "pandora::RecoLoadedDepos"
physics.producers.energyrecnc.ShowerLabel:            "pandoraShower::RecoLoadedDepos"
physics.producers.energyrecnc.ShowerToHitLabel:       "pandoraShower::RecoLoadedDepos"
physics.producers.energyrecnc.TrackLabel:             "pandoraTrack::RecoLoadedDepos"
physics.producers.energyrecnc.TrackToHitLabel:        "pandoraTrack::RecoLoadedDepos"
physics.producers.energyrecnc.WireLabel:              "wclsmcnfsp:gauss:RecoLoadedDepos"
physics.producers.energyrecnue.HitLabel:              "linecluster::RecoLoadedDepos"
physics.producers.energyrecnue.HitToSpacePointLabel:  "pandora::RecoLoadedDepos"
physics.producers.energyrecnue.ShowerLabel:           "pandoraShower::RecoLoadedDepos"
physics.producers.energyrecnue.ShowerToHitLabel:      "pandoraShower::RecoLoadedDepos"
physics.producers.energyrecnue.TrackLabel:            "pandoraTrack::RecoLoadedDepos"
physics.producers.energyrecnue.TrackToHitLabel:       "pandoraTrack::RecoLoadedDepos"
physics.producers.energyrecnue.WireLabel:             "wclsmcnfsp:gauss:RecoLoadedDepos"

