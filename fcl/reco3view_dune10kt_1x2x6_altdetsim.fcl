#include "services_dune.fcl"
#include "reco3view_workflow.fcl"
#include "tools_dune.fcl"

process_name: Reco3viewAltDetsim

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "reco_hist.root" }
  MemoryTracker:     {}
  TimeTracker:       {}
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod
  FileCatalogMetadata:  @local::art_file_catalog_mc
                        @table::dunefd_reco_services_refactored
  @table::dunefd_1x2x6_reco_services_refactored
}
#source is now a root file
source:
{
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
  saveMemoryObjectThreshold: 0
  inputCommands: ["keep *_*_*_*", "drop *_*_*_Reco" ]
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

 producers:
 {
   @table::reco3view_producers
 }

 #define the output stream, there could be more than one if using filters
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event,
 #ie filters and producers
 reco: [ @sequence::reco3view_workflow_alt ]
 trigger_paths: [ reco ]

 #end_paths is a keyword and contains the paths that do not modify the art::Event,
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_3viewalt.root"
   dataTier:    "full-reconstructed"
   compressionLevel: 1
   saveMemoryObjectThreshold: 0
 }
}

physics.producers.wclsmcnfsp.wcls_main.params.raw_input_label: "tpcrawdecoder:daq:detsim"
physics.producers.gaushit.CalDataModuleLabel:                  "wclsmcnfsp:gauss:Reco3viewAltDetsim"

physics.producers.spsolve.HitLabel:     "gaushit::Reco3viewAltDetsim"
physics.producers.hitfd.HitModuleLabel: "gaushit::Reco3viewAltDetsim"
physics.producers.hitfd.SpModuleLabel:  "spsolve::Reco3viewAltDetsim"

physics.producers.linecluster.HitFinderModuleLabel: "hitfd::Reco3viewAltDetsim"

physics.producers.pandora.HitFinderModuleLabel:      "linecluster::Reco3viewAltDetsim"
physics.producers.pandoraTrack.PFParticleLabel:      "pandora::Reco3viewAltDetsim"
physics.producers.pandoraShower.PFParticleLabel:     "pandora::Reco3viewAltDetsim"
physics.producers.pandoracalo.TrackModuleLabel:      "pandoraTrack::Reco3viewAltDetsim"
physics.producers.pandoracalo.SpacePointModuleLabel: "pandora::Reco3viewAltDetsim"
physics.producers.pandoracalo.SpacePointModuleLabel: "pandora::Reco3viewAltDetsim"
physics.producers.pandorapid.CalorimetryModuleLabel: "pandoracalo::Reco3viewAltDetsim"
physics.producers.pandorapid.TrackModuleLabel:       "pandoraTrack::Reco3viewAltDetsim"

physics.producers.cvnmapalt.HitsModuleLabel: "hitfd::Reco3viewAltDetsim"
physics.producers.cvnmapalt.ClusterPMLabel:  "cvnmapalt" // producer does `art::InputTag itag1(fPixelMapInput, fPixelMapInput)` so need a unique instance and module label >:(
physics.producers.cvnmapalt.MinClusterHits:  0

physics.producers.cvneva.PixelMapInput: "cvnmapalt"

physics.producers.energyrecnumu.HitLabel:                "pandora::Reco3viewAltDetsim"
physics.producers.energyrecnumu.HitToSpacePointLabel:    "pandora::Reco3viewAltDetsim"
physics.producers.energyrecnumu.ShowerLabel:             "pandoraShower::Reco3viewAltDetsim"
physics.producers.energyrecnumu.ShowerToSpacePointLabel: "pandoraShower::Reco3viewAltDetsim"
physics.producers.energyrecnumu.TrackLabel:              "pandoraTrack::Reco3viewAltDetsim"
physics.producers.energyrecnumu.TrackToSpacePointLabel:  "pandoraTrack::Reco3viewAltDetsim"
physics.producers.energyrecnumu.WireLabel:               "wclsdatanfsp:gauss:Reco3viewAltDetsim"
physics.producers.energyrecnc.HitLabel:                  "pandora::Reco3viewAltDetsim"
physics.producers.energyrecnc.HitToSpacePointLabel:      "pandora::Reco3viewAltDetsim"
physics.producers.energyrecnc.ShowerLabel:               "pandoraShower::Reco3viewAltDetsim"
physics.producers.energyrecnc.ShowerToSpacePointLabel:   "pandoraShower::Reco3viewAltDetsim"
physics.producers.energyrecnc.TrackLabel:                "pandoraTrack::Reco3viewAltDetsim"
physics.producers.energyrecnc.TrackToSpacePointLabel:    "pandoraTrack::Reco3viewAltDetsim"
physics.producers.energyrecnc.WireLabel:                 "wclsdatanfsp:gauss:Reco3viewAltDetsim"

